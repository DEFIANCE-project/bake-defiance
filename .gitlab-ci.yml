image: docker:latest

variables:
  # Tell 'docker:dind' to enable TLS (recommended)
  # and generate certificates in the specified directory.
  DOCKER_TLS_CERTDIR: "/certs"
  DEFAULT_IMG_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  FULL_IMG_NAME: $CI_REGISTRY_IMAGE:full-$CI_COMMIT_SHA
  GIT_SUBMODULE_STRATEGY: recursive

default:
  tags:
    - docker
    - openhpi-cloud

services:
  - name: docker:dind
    command: ["--registry-mirror", "https://mirror.registry.openhpi.cloud"]

build-devcontainer:
  stage: build
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker buildx build . -f .devcontainer/Dockerfile -t $DEFAULT_IMG_NAME --cache-to type=inline --cache-from type=registry,ref=$DEFAULT_IMG_NAME
    - echo "$CI_COMMIT_BRANCH"
    - echo "$CI_COMMIT_REF_NAME"
    - if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then docker tag $DEFAULT_IMG_NAME $CI_REGISTRY_IMAGE:latest; fi
    - docker push $CI_REGISTRY_IMAGE --all-tags

full-build:
  stage: build
  needs:
    - build-devcontainer
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
  script:
    - docker buildx build . -f Dockerfile-develop --build-arg BASE=$DEFAULT_IMG_NAME -t $FULL_IMG_NAME --cache-to type=inline --cache-from type=registry,ref=$CI_REGISTRY_IMAGE:latest-full
    - if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then docker tag $FULL_IMG_NAME $CI_REGISTRY_IMAGE:latest-full; fi
    - docker push $CI_REGISTRY_IMAGE --all-tags

devcontainer-bootup:
  stage: test
  needs:
    - build-devcontainer
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --update nodejs npm python3 make g++
    - npm install -g @devcontainers/cli
  script:
    - devcontainer build --workspace-folder . --log-level debug --image-name $DEFAULT_IMG_NAME --cache-from type=registry,ref=$CI_REGISTRY_IMAGE:latest-full
    #  Clone via https only and log in via token
    - sed -E "s,https://github.com/DEFIANCE-project,https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.hpi.de/bp_DEFIANCE," -i contrib/defiance.xml
    - devcontainer up --workspace-folder . --log-level debug

  artifacts:
    paths:
      - source/ns-3.40
      - Makefile
    exclude:
      - source/ns-3.40/build/**/*
      - source/ns-3.40/cmake-cache/**/*
      - source/ns-3.40/.lock-ns3_linux_build
